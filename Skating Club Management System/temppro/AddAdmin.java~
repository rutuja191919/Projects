import java.awt.*;
import java.awt.event.*;
import javax.swing.*;
import java.sql.*;
import java.io.*;
import java.util.*;
class AddAdmin extends JFrame implements ActionListener
{static int ano=1;
  JLabel inf,name,cno,mid,sal,uname, pswrd,cnpswrd;
  JTextField nam,cono,mail,sala,user;
  JPasswordField pwd,cnpwd;
  JButton submit,back;
  Connection con = null;
  Statement stmt = null;
  ResultSet rs;

  public AddAdmin ()
  {
    super ("Registration of Admin");
       	
  JLabel background=new JLabel(new ImageIcon(ClassLoader.getSystemResource ("pics/attend1.png")));
				  this.add(background);
    this.setSize (1000,700);


    this.setDefaultCloseOperation (EXIT_ON_CLOSE);


    name = new JLabel ("*Name:");
    cno= new JLabel ("*Contact No:");
    mid = new JLabel ("*Mail ID:");
    sal = new JLabel ("Salary:");
    uname = new JLabel ("*UserName:");
    pswrd = new JLabel ("*Password:");
    cnpswrd = new JLabel ("*Confirm Password:");
    inf=new JLabel("* indicate compalsary fields");

    nam=new JTextField();
    cono=new JTextField();
    mail=new JTextField();
    sala=new JTextField();
    user=new JTextField();
    pwd=new JPasswordField();    
    cnpwd=new JPasswordField();

    submit =
      new JButton ("SUBMIT");
back=new JButton ("back",
		   new ImageIcon (ClassLoader.
				  getSystemResource ("pics/back.png")));

    name.setBounds(200,100,160,30);
    cno.setBounds(200,140,160,30);
    mid.setBounds(200,180,160,30);
    sal.setBounds(200,220,160,30);
    uname.setBounds(200,260,160,30);
    pswrd.setBounds(200,300,160,30);
    cnpswrd.setBounds(200,340,160,30);
    inf.setBounds(200,380,200,30);

    nam.setBounds(330,100,220,30);
    cono.setBounds(330,140,220,30);
    mail.setBounds(330,180,220,30);
    sala.setBounds(330,220,220,30);
    user.setBounds(330,260,220,30);
    pwd.setBounds(330,300,220,30);
    cnpwd.setBounds(330,340,220,30);

    submit.setBounds(700,450,120,32);
    back.setBounds(700,490,120,32);

    background.add (name);
    background.add (cno);
    background.add (mid);
    background.add (sal);
    background.add (uname);
    background.add (pswrd);
    background.add (cnpswrd);
    background.add (inf); 

    background.add (nam);
    background.add (cono);
    background.add (mail);
    background.add (sala);
    background.add (user);
    background.add (pwd);
    background.add (cnpwd);

    background.add (submit);
    background.add (back);

    submit.addActionListener (this);
     back.addActionListener(this);

	this.setVisible (true);

  }
	 
public int insert()
{
int i=0;
try
{
PreparedStatement ps;
ps=con.prepareStatement("Insert into Admin values(?,?,?)");
ps.setInt(1,ano);
ps.setString(2,user.getText());
ps.setString(3,pwd.getText());
i=ps.executeUpdate();
}
catch(Exception e)
{
System.out.println(e);
}
return i; 
}

	public void connect()
	{
try
{
	Class.forName("org.postgresql.Driver");
  	 con = DriverManager.getConnection("jdbc:postgresql://192.168.100.10/tybcs25","tybcs25","");
  	 stmt=con.createStatement();
}
catch(Exception e)
{
System.out.println(e);
}
	}
  public static void main (String s[])
  {
    new AddAdmin();

  }
  public void actionPerformed (ActionEvent e3)
  {
int i;
connect();
	if(e3.getSource()==submit)
	{
	
	if (nam.getText ().equals ("")  || cono.getText ().equals ("") || mail.getText ().equals ("") || sala.getText ().equals ("")  || user.getText ().equals ("") || pwd.getText ().equals ("") || cnpwd.getText ().equals ("")) 
	     {
		
			JOptionPane.showMessageDialog (null,
					       "All entrys  with * are must","submition fail",
					       JOptionPane.DEFAULT_OPTION);
		name.requestFocus ();
	      }

	    else 
	      {          
			i=insert();
			if(i==1)
			{
			ano++;
			JOptionPane.showMessageDialog (null,
					       "Submitted sucessfully","process complete",
					       JOptionPane.DEFAULT_OPTION);
			}
	      }
	
	}
	if(e3.getSource()==back)
	{
	new Admin();
	dispose();
	}

}
}
